# -*- coding: utf-8 -*-

"""
postnlecommerceapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from postnlecommerceapis.api_helper import APIHelper
from postnlecommerceapis.configuration import Server
from postnlecommerceapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from postnlecommerceapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from postnlecommerceapis.models.checkout_response import CheckoutResponse
from postnlecommerceapis.exceptions.checkout_response_invalid_exception import CheckoutResponseInvalidException
from postnlecommerceapis.exceptions.post_cif_checkout_service_unauthorized_exception import PostCIFCheckoutServiceUnauthorizedException
from postnlecommerceapis.exceptions.post_cif_checkout_service_method_not_allowed_exception import PostCIFCheckoutServiceMethodNotAllowedException
from postnlecommerceapis.exceptions.post_cif_checkout_service_too_many_request_exception import PostCIFCheckoutServiceTooManyRequestException
from postnlecommerceapis.exceptions.checkout_response_error_exception import CheckoutResponseErrorException


class CheckoutController(BaseController):

    """A Controller to access Endpoints in the postnlecommerceapis API."""
    def __init__(self, config):
        super(CheckoutController, self).__init__(config)

    def checkout(self,
                 body):
        """Does a POST request to /shipment/v1/checkout.

        Checkout

        Args:
            body (CheckoutRequest): TODO: type description here.

        Returns:
            CheckoutResponse: Response from the API. Status object

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/shipment/v1/checkout')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CheckoutResponse.from_dictionary)
            .local_error('400', 'Invalid request', CheckoutResponseInvalidException)
            .local_error('401', 'Invalid apikey', PostCIFCheckoutServiceUnauthorizedException)
            .local_error('405', 'Method not allowed', PostCIFCheckoutServiceMethodNotAllowedException)
            .local_error('429', 'Too many requests', PostCIFCheckoutServiceTooManyRequestException)
            .local_error('500', 'Internal server error', CheckoutResponseErrorException)
        ).execute()
